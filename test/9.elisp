;;; Relint test file 9          -*- emacs-lisp -*-

;; Test mutation/binding of known variables for detecting regexps.

(defun test-9 ()
  (setq-local page-delimiter "[aa]")
  (setq-local paragraph-separate "[bb]")
  (setq-local paragraph-start "[cc]")
  (setq-local sentence-end "[dd]")
  (setq-local comment-start-skip "[ee]")
  (setq-local comment-end-skip "[ff]")

  (setq sentence-end "[gg]")
  (set (make-local-variable 'paragraph-start) "[hh]")

  (let ((paragraph-separate "[ii]")
        (page-delimiter "[jj]"))
    (let* ((comment-start-skip "[kk]")
           (comment-end-skip "[ll]"))
      (asdf)))

  (setq treesit-sentence-type-regexp "+0")
  (setq treesit-sexp-type-regexp "+1"))

(defvar bad-imenu
  '(("*less*" "" 0)
    (nil "+b+" 0)))

(defvar bad-treesit-imenu
  '((nil "node" nil nil)
    ("+++" "+c+" nil nil)))

(defun test-9-ge ()
  (setq-local imenu-generic-expression
              '((nil "oh" 0)
                ("*more*" "+a+" 0)))
  (setq imenu-generic-expression bad-imenu)
  (setq-local treesit-simple-imenu-settings bad-treesit-imenu)
  (set (make-local-variable 'treesit-simple-imenu-settings)
       '((nil "type" nil nil)
         ("+more+" "+d+" nil nil))))

(defun test-9-fl-kw ()
  (setq-local font-lock-keywords '(("[mm]" . tag)))
  (setq font-lock-keywords '(("[nn]" . tag)))
  (set (make-local-variable 'font-lock-keywords) '(("[oo]" . tag))))

(defconst my-fl-keyw-1
  '(("[pp]" . alpha)))

(defconst my-font-lock-keywords-2
  '(("[qq]" . beta)))

(defun test-9-fl-def ()
  (setq font-lock-defaults
        '((my-fl-keyw-1
           my-font-lock-keywords-2)
          moo mooo)))

(defun test-9-ts-indent ()
  (setq treesit-simple-indent-rules
        '((a ((match "+e+" "+f+" "+g+") a 0)
             ((n-p-gp "+h+" "+i+" "+j+") a 0))
          (b ((parent-is "+k+") b 0)
             ((node-is "+l+") b 0)
             ((field-is "+m+") b 0)))))

(defun test-9-ts-defun ()
  (setq treesit-defun-type-regexp "+n+")
  (setq treesit-defun-type-regexp (cons "+o+" #'ignore)))
